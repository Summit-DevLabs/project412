{
  "version": 3,
  "sources": ["../../../app/components/PhotoContainer.tsx", "../../../app/components/PhotoCard.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/PhotoContainer.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/PhotoContainer.tsx\");\n  import.meta.hot.lastModified = \"1723822631732.0112\";\n}\n// REMIX HMR END\n\nimport { useState } from 'react';\nimport PhotoCard from './PhotoCard';\nexport default function PhotoContainer({\n  photos,\n  layout,\n  size,\n  filePath,\n  photoStyle,\n  hideAnimation\n}) {\n  _s();\n  const [isFullScreen, setIsFullScreen] = useState(false);\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const handleFullScreen = index => {\n    setCurrentPhotoIndex(index);\n    setIsFullScreen(true);\n  };\n  const handleNextPhoto = () => {\n    setCurrentPhotoIndex(prevIndex => (prevIndex + 1) % photos.length);\n  };\n  const handlePrevPhoto = () => {\n    setCurrentPhotoIndex(prevIndex => (prevIndex - 1 + photos.length) % photos.length);\n  };\n  return <>\n      <div className=\"md:mt-12 sm:mt-16 lg:mt-2\">\n        <div className=\"flex flex-wrap justify-center items-center w-full mx-auto\">\n          {photos.map((photo, index) => <>\n              {layout === 'col' && <div key={photo.id} className=\"w-full flex justify-center items-center\">\n                  <PhotoCard photo={photo} size={size} filePath={filePath} photoStyle={photoStyle} hideAnimation={hideAnimation} onClick={() => handleFullScreen(index)} />\n                </div>}\n              {layout === 'row' && <div key={photo.id} className=\"flex flex-nowrap justify-center items-center\">\n                  <PhotoCard photo={photo} size={size} filePath={filePath} photoStyle={photoStyle} hideAnimation={hideAnimation} onClick={() => handleFullScreen(index)} />\n                </div>}\n              {layout === 'grid' && <div key={photo.id} className=\"w-full sm:w-1/2 md:w-1/3 lg:w-1/4 xl:w-1/5 flex justify-center items-center\">\n                  <PhotoCard photo={photo} size={size} filePath={filePath} photoStyle={photoStyle} hideAnimation={hideAnimation} onClick={() => handleFullScreen(index)} />\n                </div>}\n            </>)}\n        </div>\n      </div>\n\n      {isFullScreen && <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-75\">\n          <button className=\"absolute top-4 right-4 text-white text-2xl\" onClick={() => setIsFullScreen(false)}>\n            &times;\n          </button>\n          <button className=\"absolute left-4 text-white text-2xl\" onClick={handlePrevPhoto}>\n            &#9664;\n          </button>\n          <div>\n            <img src={`/assets/${filePath}/${photos[currentPhotoIndex].src}`} alt={photos[currentPhotoIndex].alt} className=\"max-w-full max-h-full\" />\n            <div className=\"absolute bottom-0 w-full p-4 bg-black bg-opacity-50 text-white z-100\">\n              <h2 className=\"font-bold text-md\">{photos[currentPhotoIndex].title}</h2>\n              <p className=\"text-sm\">{photos[currentPhotoIndex].description}</p>\n            </div>\n          </div>\n\n          <button className=\"absolute right-4 text-white text-2xl\" onClick={handleNextPhoto}>\n            &#9654;\n          </button>\n        </div>}\n    </>;\n}\n_s(PhotoContainer, \"WVdhMr6OuaTo3reg3qHLO2AVPfU=\");\n_c = PhotoContainer;\nvar _c;\n$RefreshReg$(_c, \"PhotoContainer\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/PhotoCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/PhotoCard.tsx\");\n  import.meta.hot.lastModified = \"1723822319746.623\";\n}\n// REMIX HMR END\n\nexport default function PhotoCard({\n  photo,\n  size,\n  filePath,\n  photoStyle,\n  hideAnimation,\n  onClick\n}) {\n  return <div className={`m-2 flex justify-center items-center bg-white rounded-lg overflow-hidden ${hideAnimation ? '' : 'transform transition-all duration-500 group hover:scale-110'} ${size === 'small' ? 'w-48 h-48' : size === 'medium' ? 'w-64 h-64' : size === 'large' ? 'w-[85%]' : 'w-full h-full'}`} onClick={onClick}>\n      <div className=\"relative w-full h-full flex items-center justify-center\">\n        <img src={`/assets/${filePath}/${photo.src}`} alt={photo.alt} className={`w-full h-full rounded-tr-lg rounded-br-lg ${photoStyle === 'contain' ? 'object-contain' : 'object-cover'} ${hideAnimation ? '' : 'transition-opacity duration-500 group-hover:opacity-75'}`} />\n        {photo.title || photo.description ? <div className=\"absolute bottom-0 w-full p-4 bg-black bg-opacity-50 text-white opacity-0 group-hover:opacity-100 transition-opacity duration-500\">\n            <h2 className=\"font-bold text-md\">{photo.title}</h2>\n            <p className=\"text-sm\">{photo.description}</p>\n          </div> : ''}\n      </div>\n    </div>;\n}\n_c = PhotoCard;\nvar _c;\n$RefreshReg$(_c, \"PhotoCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c"]
}
